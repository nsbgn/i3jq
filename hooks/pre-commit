#!/bin/sh
# Putting generated code under source control feels *wrong*. It requires you to
# manually keep pairs of files in sync --- only one of which is a source ---
# and it clutters the diffs with gibberish.
#
# Nevertheless, to enable a painless installation using `go install ...`, it is
# necessary. It also seems encouraged by the Go devs:
#
# > "... once the file is generated (and tested!) it must be checked into the
# source code repository ..."
# ~ Rob Pike, 2014-12-22, <https://go.dev/blog/generate>, accessed 2024-07-03.
#
# To somewhat mitigate the mental burden of keeping files in sync, this
# pre-commit hook checks if any source builtin was changed, and if so, runs `go
# generate` and adds the resulting `builtin.go` to the commit.

cd "$(git rev-parse --show-toplevel)"

GENERATOR="_tools/gen_builtin.go"
BUILTIN_DIR="builtin"
BUILTIN_GO="builtin.go"

if [ ! -e "${GENERATOR}" ]; then
    echo 'Error: Could not find builtin generator' 1>&2
    exit 1
fi
if [ ! -e "${BUILTIN_DIR}"/base.jq ]; then
    echo 'Error: Could not find builtins' 1>&2
    exit 1
fi

builtins_changed() {
    git diff --cached --name-only --diff-filter=ACM | \
        grep "^\(\.\./\)*${BUILTIN_DIR}/.*\.jq$\|^${GENERATOR}$"
    return $?
}

if builtins_changed; then
    echo 'Detected staged changes in builtins. Running `go generate`...' 1>&2
    if ! go generate; then
        exit 1
    fi
    echo "Adding ${BUILTIN_GO} to commit." 1>&2
    git add -f "${BUILTIN_GO}"
fi
